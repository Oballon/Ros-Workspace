/**
\mainpage

\section Description Description

See <a href="https://github.com/andreasgustavsson/find_moving_objects/blob/kinetic-devel/README.md">README.md</a>

\section Messages Defined Messages
- <a href="http://docs.ros.org/kinetic/api/find_moving_objects/html/msg/MovingObject.html">
MovingObject.msg</a>
- <a href="http://docs.ros.org/kinetic/api/find_moving_objects/html/msg/MovingObjectArray.html">
MovingObjectArray.msg</a>

\section FindMovingObjectsAPI Find Moving Objects Code API
- \link find_moving_objects::Bank Bank (C++) \endlink
- \link find_moving_objects::BankArgument BankArgument (C++) \endlink

\section LaserScanInterpreterNode A Node and Nodelet for Interpreting a LaserScan Data Stream
- \link laserscan_interpreter.cpp laserscan_interpreter.cpp \endlink 
defines a node and a nodelet which find objects in a 
<a href="http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html">
sensor_msgs::LaserScan</a> data stream and derive and report their positions and velocities in several ROS frames.

\section PointCloud2InterpreterNode A Node and Nodelet for Interpreting a PointCloud2 Data Stream
- \link pointcloud2_interpreter.cpp pointcloud2_interpreter.cpp \endlink 
defines a node and a nodelet which find objects in a 
<a href="http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud2.html">
sensor_msgs::PointCloud2</a> data stream and derive and report their positions and velocities in several ROS frames.

\section ConfidenceEnhancerNode A Confidence-Enhancing ROS Node
- \link moving_objects_confidence_enhancer_node.cpp moving_objects_confidence_enhancer_node.cpp \endlink 
defines a node that tries to increase the confidence of objects which are seen by several sensors.

\section ExampleBag Example Bag File
There is a 
<a href="https://github.com/andreasgustavsson/find_moving_objects/blob/kinetic-devel/launch/intel_realsense_d435_and_slamtec_rplidar_a2_w_enhancer.launch">
launch file</a> that uses rosbag to play back a recording of the system when getting input from an Intel 
Realsense D435 depth camera (producing point clouds) and a Slamtec rplidar A2M8 (producing laser scans). Note that this
bag file is compressed and must be extracted before the launch file can be used.

\section ExampleLaunch Example Launch File
There is a launch file that plays back the bag extracted bag file and runs the above interpreter node (for laser scans) 
and nodelet (for point clouds) to find moving objects. Rviz is used for visualization.
The launch file can also be used for running a live system with the two given specific sensors.

\section ExampleNodes Auxiliary Nodes Used when Playing Back the Example Bag
- \link example_frame_broadcaster_node.cpp example_frame_broadcaster_node.cpp \endlink
defines a node that broadcasts the relations between the different components and frames.
- \link example_d435_voxel_echoer_node.cpp example_d435_voxel_echoer_node.cpp \endlink and 
  \link example_rplidar_echoer_node.cpp example_rplidar_echoer_node.cpp \endlink
define nodes that echo the played-back messages from the camera and LIDAR, respectively, with updated timestamps.
This is to prevent the system from dropping the messages because they are too old (note that the actually played-back 
messages are dropped, but that the echoed messages are not).

*/
